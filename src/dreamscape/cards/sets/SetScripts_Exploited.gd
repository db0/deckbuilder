extends CoreScripts

const Exhaustion = {
	"manual": {
		"hand": [
			{
				"name": "apply_effect",
				"tags": ["Card"],
				"effect_name": Terms.ACTIVE_EFFECTS.exhaustion.name,
				"subject": "dreamer",
				"modification": {
					"lookup_property": "_amounts",
					"value_key": "concentration_stacks"
				},
			},
			{
				"name": "end_turn"
			},
		],
	}
}
const MinorExhaustion = {
	"manual": {
		"hand": [
			{
				"name": "apply_effect",
				"tags": ["Card"],
				"effect_name": Terms.ACTIVE_EFFECTS.exhaustion.name,
				"subject": "dreamer",
				"modification": {
					"lookup_property": "_amounts",
					"value_key": "concentration_stacks"
				},
			},
		],
	}
}
const KeepEmComing = {
	"manual": {
		"hand": [
			{
				"name": "apply_effect",
				"tags": ["Card"],
				"effect_name": Terms.ACTIVE_EFFECTS.keep_em_coming.name,
				"subject": "dreamer",
				"modification": {
					"lookup_property": "_amounts",
					"value_key": "concentration_stacks"
				},
			},
		],
	}
}
const KnowYourLimits = {
	"manual": {
		"hand": [
			{
				"name": "apply_effect",
				"tags": ["Card"],
				"effect_name": Terms.ACTIVE_EFFECTS.know_your_limits.name,
				"subject": "dreamer",
				"modification": {
					"lookup_property": "_amounts",
					"value_key": "concentration_stacks"
				},
			},
		],
	}
}
const Routine = {
	"card_moved_to_pile": {
		"pile": [
			{
				"name": "apply_effect",
				"tags": ["Card"],
				"subject": "dreamer",
				"trigger": "self",
				"effect_name": Terms.ACTIVE_EFFECTS.buffer.name,
				"modification":  {
					"lookup_property": "_amounts",
					"value_key": "effect_stacks",
				}
			},
			{
				"name": "apply_effect",
				"tags": ["Card"],
				"subject": "dreamer",
				"trigger": "self",
				"effect_name": Terms.ACTIVE_EFFECTS.protection.name,
				"modification":  {
					"lookup_property": "_amounts",
					"value_key": "effect_stacks2",
				}
			},
		],
		"filter_destination": "forgotten",
	},
}

const SolidWorkEthic = {
	"manual": {
		"hand": [
			{
				"name": "assign_defence",
				"tags": ["Card"],
				"subject": "dreamer",
				"amount": {
					"lookup_property": "_amounts",
					"value_key": "defence_amount"
				},
			},
			{
				"name": "move_card_to_container",
				"tags": ["Card"],
				"subject": "index",
				"subject_count": "all",
				"subject_index": "bottom",
				SP.KEY_NEEDS_SELECTION: true,
				SP.KEY_SELECTION_COUNT: {
					"lookup_property": "_amounts",
					"value_key": "detrimental_integer"
				},
				SP.KEY_SELECTION_TYPE: "equal",
				SP.KEY_SELECTION_OPTIONAL: false,
				SP.KEY_SELECTION_IGNORE_SELF: true,
				"src_container": "hand",
				"dest_container": "forgotten",
			},
		],
	},
}

const WorkEthic = {
	"manual": {
		"hand": [
			{
				"name": "assign_defence",
				"tags": ["Card"],
				"subject": "dreamer",
				"amount": {
					"lookup_property": "_amounts",
					"value_key": "defence_amount"
				},
			},
			{
				"name": "move_card_to_container",
				"tags": ["Card"],
				"subject": "tutor",
				"subject_count": {
					"lookup_property": "_amounts",
					"value_key": "detrimental_integer"
				},
				"sort_by": "random",
				"src_container": "hand",
				"dest_container": "forgotten",
			},
		],
	},
}

const Overtime = {
	"manual": {
		"hand": [
			{
				"name": "move_card_to_container",
				"tags": ["Card"],
				"subject": "tutor",
				"subject_count": {
					"lookup_property": "_amounts",
					"value_key": "detrimental_integer"
				},
				"sort_by": "random",
				"src_container": "hand",
				"dest_container": "forgotten",
			},
			{
				"name": "apply_effect",
				"tags": ["Card"],
				"subject": "dreamer",
				"trigger": "self",
				"effect_name": Terms.ACTIVE_EFFECTS.strengthen.name,
				"modification":  {
					"lookup_property": "_amounts",
					"value_key": "effect_stacks",
				}
			},
			{
				"name": "apply_effect",
				"tags": ["Card"],
				"subject": "dreamer",
				"trigger": "self",
				"effect_name": Terms.ACTIVE_EFFECTS.quicken.name,
				"modification":  {
					"lookup_property": "_amounts",
					"value_key": "effect_stacks2",
				}
			},
		],
	},
}

const BurntOut = {
	"manual": {
		"hand": [
			{
				"name": "draw_cards",
				"tags": ["Card"],
				"card_count": {
					"lookup_property": "_amounts",
					"value_key": "draw_amount"
				},
			},
			{
				"name": "apply_effect",
				"tags": ["Card"],
				"subject": "dreamer",
				"trigger": "self",
				"effect_name": Terms.ACTIVE_EFFECTS.armor.name,
				"modification":  {
					"lookup_property": "_amounts",
					"value_key": "effect_stacks",
				}
			},
		],
	},
}

const Organizing = {
	"manual": {
		"hand": [
			{
				"name": "mod_counter",
				"tags": ["Card"],
				"counter_name": "immersion",
				"modification": "per_tutor",
				"per_tutor": {
					"src_container": "forgotten",
					"subject": "tutor",
					"subject_count": "all",
					"modifier": {
						"lookup_property": "_amounts",
						"value_key": "beneficial_integer",
						"default": 0,
					},
				},
			},
			{
				"name": "draw_cards",
				"tags": ["Card"],
				"card_count": "per_tutor",
				"per_tutor": {
					"src_container": "forgotten",
					"subject": "tutor",
					"subject_count": "all",
					"modifier": {
						"lookup_property": "_amounts",
						"value_key": "beneficial_integer",
						"default": 0,
					},
				},
			},
			{
				"name": "move_card_to_container",
				"subject": "self",
				"dest_container": "forgotten",
				"tags": ["Played", "Card"],
			},
		],
	},
}


const TheGrind = {
	"manual": {
		"hand": [
			{
				"name": "spawn_card_to_container",
				"card_name": "Lacuna",
				"dest_container": "hand",
				"object_count": {
					"lookup_property": "_amounts",
					"value_key": "detrimental_integer",
				},
				"tags": ["Card"],
				"yield_time": 0.05,
			},
			{
				"name": "modify_damage",
				"subject": "target",
				"needs_subject": true,
				"amount": {
					"lookup_property": "_amounts",
					"value_key": "damage_amount"
				},
				"tags": ["Attack", "Card"],
				"filter_state_subject": [{
					"filter_group": "EnemyEntities",
				},],
			},
		],
	},
}

const BurnItAllDown = {
	"manual": {
		"hand": [
			{
				"name": "move_card_to_container",
				"tags": ["Card"],
				"subject": "tutor",
				"subject_count": 'all',
				"src_container": "hand",
				"dest_container": "forgotten",
				"filter_state_tutor": [
					{
						"filter_properties": {
							"Type": "Action",
							"comparison": "ne",
						},
					},
				],
			},
			{
				"name": "modify_damage",
				"subject": "target",
				"needs_subject": true,
				"amount": {
					"lookup_property": "_amounts",
					"value_key": "damage_amount"
				},
				"tags": ["Attack", "Card"],
				"filter_state_subject": [{
					"filter_group": "EnemyEntities",
				},],
			},
		],
	},
}

const Stimulants = {
	"manual": {
		"hand": [
			{
				"name": "spawn_card_to_container",
				"card_name": "Stimulated",
				"dest_container": "deck",
				"object_count": {
					"lookup_property": "_amounts",
					"value_key": "detrimental_integer",
				},
				"tags": ["Card"],
			},
			{
				"name": "shuffle_container",
				"tags": ["Card"],
				"dest_container": "deck",
			},
			{
				"name": "modify_damage",
				"subject": "boardseek",
				"amount": {
					"lookup_property": "_amounts",
					"value_key": "damage_amount"
				},
				"subject_count": "all",
				"tags": ["Attack", "Card"],
				"filter_state_seek": [{
					"filter_group": "EnemyEntities",
				},],
			},
		],
	},
}
const WorkSlowdown = {
	"manual": {
		"hand": [
			{
				"name": "apply_effect",
				"tags": ["Card"],
				"subject": "dreamer",
				"modification": "per_tutor",
				"effect_name": Terms.ACTIVE_EFFECTS.armor.name,
				"per_tutor": {
					"src_container": "hand",
					"subject": "tutor",
					"subject_count": "all",
					"multiplier": {
						"lookup_property": "_amounts",
						"value_key": "effect_stacks"
					},
					"filter_exclude_self": true,
					"filter_state_tutor": [
						{
							"filter_properties": {
								"Type": "Action",
								"comparison": "ne",
							},
						},
					],
				},
			},
			{
				"name": "move_card_to_container",
				"tags": ["Card"],
				"subject": "tutor",
				"subject_count": 'all',
				"src_container": "hand",
				"dest_container": "forgotten",
				"store_integer": true,
				"filter_exclude_self": true,
				"filter_state_tutor": [
					{
						"filter_properties": {
							"Type": "Action",
							"comparison": "ne",
						},
					},
				],
			},
		],
	},
}
# This fuction returns all the scripts of the specified card name.
#
# if no scripts have been defined, an empty dictionary is returned instead.
func get_scripts(card_name: String, get_modified = true) -> Dictionary:
	# This format allows me to trace which script failed during load
	var scripts := {
		"Exhaustion": Exhaustion,
		"Minor Exhaustion": MinorExhaustion,
		"Keep 'em Coming": KeepEmComing,
		"Know Your Limits": KnowYourLimits,
		"Routine": Routine,
		"Work Ethic": WorkEthic,
		"Solid Work Ethic": SolidWorkEthic,
		"Overtime": Overtime,
		"Burnt Out": BurntOut,
		"Organizing": Organizing,
		"The Grind": TheGrind,
		"Burn It All Down!": BurnItAllDown,
		"Stimulants": Stimulants,
		"Work Slowdown": WorkSlowdown,
	}
	return(_prepare_scripts(scripts, card_name, get_modified))
